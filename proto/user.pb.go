// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/user.proto

package user

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CallRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallRequest) Reset()         { *m = CallRequest{} }
func (m *CallRequest) String() string { return proto.CompactTextString(m) }
func (*CallRequest) ProtoMessage()    {}
func (*CallRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{0}
}

func (m *CallRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallRequest.Unmarshal(m, b)
}
func (m *CallRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallRequest.Marshal(b, m, deterministic)
}
func (m *CallRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallRequest.Merge(m, src)
}
func (m *CallRequest) XXX_Size() int {
	return xxx_messageInfo_CallRequest.Size(m)
}
func (m *CallRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CallRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CallRequest proto.InternalMessageInfo

func (m *CallRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CallResponse struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallResponse) Reset()         { *m = CallResponse{} }
func (m *CallResponse) String() string { return proto.CompactTextString(m) }
func (*CallResponse) ProtoMessage()    {}
func (*CallResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{1}
}

func (m *CallResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallResponse.Unmarshal(m, b)
}
func (m *CallResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallResponse.Marshal(b, m, deterministic)
}
func (m *CallResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallResponse.Merge(m, src)
}
func (m *CallResponse) XXX_Size() int {
	return xxx_messageInfo_CallResponse.Size(m)
}
func (m *CallResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CallResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CallResponse proto.InternalMessageInfo

func (m *CallResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type ClientStreamRequest struct {
	Stroke               int64    `protobuf:"varint,1,opt,name=stroke,proto3" json:"stroke,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientStreamRequest) Reset()         { *m = ClientStreamRequest{} }
func (m *ClientStreamRequest) String() string { return proto.CompactTextString(m) }
func (*ClientStreamRequest) ProtoMessage()    {}
func (*ClientStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{2}
}

func (m *ClientStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientStreamRequest.Unmarshal(m, b)
}
func (m *ClientStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientStreamRequest.Marshal(b, m, deterministic)
}
func (m *ClientStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientStreamRequest.Merge(m, src)
}
func (m *ClientStreamRequest) XXX_Size() int {
	return xxx_messageInfo_ClientStreamRequest.Size(m)
}
func (m *ClientStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClientStreamRequest proto.InternalMessageInfo

func (m *ClientStreamRequest) GetStroke() int64 {
	if m != nil {
		return m.Stroke
	}
	return 0
}

type ClientStreamResponse struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientStreamResponse) Reset()         { *m = ClientStreamResponse{} }
func (m *ClientStreamResponse) String() string { return proto.CompactTextString(m) }
func (*ClientStreamResponse) ProtoMessage()    {}
func (*ClientStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{3}
}

func (m *ClientStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientStreamResponse.Unmarshal(m, b)
}
func (m *ClientStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientStreamResponse.Marshal(b, m, deterministic)
}
func (m *ClientStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientStreamResponse.Merge(m, src)
}
func (m *ClientStreamResponse) XXX_Size() int {
	return xxx_messageInfo_ClientStreamResponse.Size(m)
}
func (m *ClientStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClientStreamResponse proto.InternalMessageInfo

func (m *ClientStreamResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ServerStreamRequest struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerStreamRequest) Reset()         { *m = ServerStreamRequest{} }
func (m *ServerStreamRequest) String() string { return proto.CompactTextString(m) }
func (*ServerStreamRequest) ProtoMessage()    {}
func (*ServerStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{4}
}

func (m *ServerStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerStreamRequest.Unmarshal(m, b)
}
func (m *ServerStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerStreamRequest.Marshal(b, m, deterministic)
}
func (m *ServerStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerStreamRequest.Merge(m, src)
}
func (m *ServerStreamRequest) XXX_Size() int {
	return xxx_messageInfo_ServerStreamRequest.Size(m)
}
func (m *ServerStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServerStreamRequest proto.InternalMessageInfo

func (m *ServerStreamRequest) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ServerStreamResponse struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerStreamResponse) Reset()         { *m = ServerStreamResponse{} }
func (m *ServerStreamResponse) String() string { return proto.CompactTextString(m) }
func (*ServerStreamResponse) ProtoMessage()    {}
func (*ServerStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{5}
}

func (m *ServerStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerStreamResponse.Unmarshal(m, b)
}
func (m *ServerStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerStreamResponse.Marshal(b, m, deterministic)
}
func (m *ServerStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerStreamResponse.Merge(m, src)
}
func (m *ServerStreamResponse) XXX_Size() int {
	return xxx_messageInfo_ServerStreamResponse.Size(m)
}
func (m *ServerStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServerStreamResponse proto.InternalMessageInfo

func (m *ServerStreamResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type BidiStreamRequest struct {
	Stroke               int64    `protobuf:"varint,1,opt,name=stroke,proto3" json:"stroke,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidiStreamRequest) Reset()         { *m = BidiStreamRequest{} }
func (m *BidiStreamRequest) String() string { return proto.CompactTextString(m) }
func (*BidiStreamRequest) ProtoMessage()    {}
func (*BidiStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{6}
}

func (m *BidiStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidiStreamRequest.Unmarshal(m, b)
}
func (m *BidiStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidiStreamRequest.Marshal(b, m, deterministic)
}
func (m *BidiStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidiStreamRequest.Merge(m, src)
}
func (m *BidiStreamRequest) XXX_Size() int {
	return xxx_messageInfo_BidiStreamRequest.Size(m)
}
func (m *BidiStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BidiStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BidiStreamRequest proto.InternalMessageInfo

func (m *BidiStreamRequest) GetStroke() int64 {
	if m != nil {
		return m.Stroke
	}
	return 0
}

type BidiStreamResponse struct {
	Stroke               int64    `protobuf:"varint,1,opt,name=stroke,proto3" json:"stroke,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidiStreamResponse) Reset()         { *m = BidiStreamResponse{} }
func (m *BidiStreamResponse) String() string { return proto.CompactTextString(m) }
func (*BidiStreamResponse) ProtoMessage()    {}
func (*BidiStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{7}
}

func (m *BidiStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidiStreamResponse.Unmarshal(m, b)
}
func (m *BidiStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidiStreamResponse.Marshal(b, m, deterministic)
}
func (m *BidiStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidiStreamResponse.Merge(m, src)
}
func (m *BidiStreamResponse) XXX_Size() int {
	return xxx_messageInfo_BidiStreamResponse.Size(m)
}
func (m *BidiStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BidiStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BidiStreamResponse proto.InternalMessageInfo

func (m *BidiStreamResponse) GetStroke() int64 {
	if m != nil {
		return m.Stroke
	}
	return 0
}

func init() {
	proto.RegisterType((*CallRequest)(nil), "user.CallRequest")
	proto.RegisterType((*CallResponse)(nil), "user.CallResponse")
	proto.RegisterType((*ClientStreamRequest)(nil), "user.ClientStreamRequest")
	proto.RegisterType((*ClientStreamResponse)(nil), "user.ClientStreamResponse")
	proto.RegisterType((*ServerStreamRequest)(nil), "user.ServerStreamRequest")
	proto.RegisterType((*ServerStreamResponse)(nil), "user.ServerStreamResponse")
	proto.RegisterType((*BidiStreamRequest)(nil), "user.BidiStreamRequest")
	proto.RegisterType((*BidiStreamResponse)(nil), "user.BidiStreamResponse")
}

func init() { proto.RegisterFile("proto/user.proto", fileDescriptor_d570e3e37e5899c5) }

var fileDescriptor_d570e3e37e5899c5 = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcd, 0x4a, 0xc3, 0x40,
	0x14, 0x46, 0x1b, 0x1b, 0x0b, 0x5e, 0x8b, 0xb4, 0xb7, 0x41, 0x6b, 0x56, 0x75, 0x56, 0x05, 0x6b,
	0x52, 0x74, 0xe9, 0xae, 0xc5, 0x85, 0xdb, 0x14, 0x37, 0xee, 0xa2, 0x5e, 0x24, 0x98, 0x9f, 0x3a,
	0x33, 0xf1, 0x49, 0x7c, 0x60, 0x99, 0x9f, 0xd0, 0x09, 0x89, 0xe8, 0xee, 0x9b, 0xce, 0xe1, 0x30,
	0x3d, 0x04, 0x26, 0x7b, 0x5e, 0xc9, 0x2a, 0xae, 0x05, 0xf1, 0x48, 0x4f, 0xf4, 0xd5, 0x66, 0x57,
	0x70, 0xba, 0x4d, 0xf3, 0x3c, 0xa1, 0xcf, 0x9a, 0x84, 0x44, 0x04, 0xbf, 0x4c, 0x0b, 0x9a, 0x7b,
	0x0b, 0x6f, 0x79, 0x92, 0xe8, 0xcd, 0x16, 0x30, 0x36, 0x88, 0xd8, 0x57, 0xa5, 0x20, 0x9c, 0xc0,
	0xb0, 0x10, 0xef, 0x16, 0x51, 0x93, 0xdd, 0xc0, 0x6c, 0x9b, 0x67, 0x54, 0xca, 0x9d, 0xe4, 0x94,
	0x16, 0x8d, 0xec, 0x1c, 0x46, 0x42, 0xf2, 0xea, 0xc3, 0xe8, 0x86, 0x89, 0x3d, 0xb1, 0x15, 0x04,
	0x6d, 0xdc, 0x8a, 0x03, 0x38, 0x7e, 0xad, 0xea, 0x52, 0x5a, 0xdc, 0x1c, 0xd8, 0x35, 0xcc, 0x76,
	0xc4, 0xbf, 0x88, 0xb7, 0xe5, 0xfd, 0xf0, 0x0a, 0x82, 0x36, 0xfc, 0x87, 0x7a, 0xba, 0xc9, 0xde,
	0xb2, 0xff, 0xbe, 0x1a, 0x5d, 0xd8, 0x8a, 0x7f, 0xa1, 0x6f, 0xbf, 0x8f, 0xc0, 0x7f, 0x12, 0xc4,
	0x31, 0x06, 0x5f, 0xd5, 0xc3, 0x69, 0xa4, 0xdb, 0x3b, 0xb1, 0x43, 0x74, 0x7f, 0x32, 0x3e, 0x36,
	0xc0, 0x47, 0x18, 0xbb, 0x75, 0xf0, 0xd2, 0x52, 0xdd, 0xc0, 0x61, 0xd8, 0x77, 0xd5, 0x88, 0x96,
	0x9e, 0x52, 0xb9, 0x35, 0x1a, 0x55, 0x4f, 0xce, 0x46, 0xd5, 0x17, 0x8f, 0x0d, 0xd6, 0x1e, 0x3e,
	0x00, 0x1c, 0xfe, 0x3d, 0x5e, 0x18, 0xba, 0x13, 0x2f, 0x9c, 0x77, 0x2f, 0x0e, 0xef, 0x59, 0x7b,
	0x9b, 0xb3, 0xe7, 0x71, 0x14, 0xeb, 0xef, 0xef, 0x5e, 0x81, 0x2f, 0x23, 0xbd, 0xef, 0x7e, 0x02,
	0x00, 0x00, 0xff, 0xff, 0xb7, 0x12, 0x34, 0xd9, 0x9f, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	Call(ctx context.Context, in *CallRequest, opts ...grpc.CallOption) (*CallResponse, error)
	ClientStream(ctx context.Context, opts ...grpc.CallOption) (User_ClientStreamClient, error)
	ServerStream(ctx context.Context, in *ServerStreamRequest, opts ...grpc.CallOption) (User_ServerStreamClient, error)
	BidiStream(ctx context.Context, opts ...grpc.CallOption) (User_BidiStreamClient, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) Call(ctx context.Context, in *CallRequest, opts ...grpc.CallOption) (*CallResponse, error) {
	out := new(CallResponse)
	err := c.cc.Invoke(ctx, "/user.User/Call", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) ClientStream(ctx context.Context, opts ...grpc.CallOption) (User_ClientStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_User_serviceDesc.Streams[0], "/user.User/ClientStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &userClientStreamClient{stream}
	return x, nil
}

type User_ClientStreamClient interface {
	Send(*ClientStreamRequest) error
	CloseAndRecv() (*ClientStreamResponse, error)
	grpc.ClientStream
}

type userClientStreamClient struct {
	grpc.ClientStream
}

func (x *userClientStreamClient) Send(m *ClientStreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *userClientStreamClient) CloseAndRecv() (*ClientStreamResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ClientStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *userClient) ServerStream(ctx context.Context, in *ServerStreamRequest, opts ...grpc.CallOption) (User_ServerStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_User_serviceDesc.Streams[1], "/user.User/ServerStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &userServerStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type User_ServerStreamClient interface {
	Recv() (*ServerStreamResponse, error)
	grpc.ClientStream
}

type userServerStreamClient struct {
	grpc.ClientStream
}

func (x *userServerStreamClient) Recv() (*ServerStreamResponse, error) {
	m := new(ServerStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *userClient) BidiStream(ctx context.Context, opts ...grpc.CallOption) (User_BidiStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_User_serviceDesc.Streams[2], "/user.User/BidiStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &userBidiStreamClient{stream}
	return x, nil
}

type User_BidiStreamClient interface {
	Send(*BidiStreamRequest) error
	Recv() (*BidiStreamResponse, error)
	grpc.ClientStream
}

type userBidiStreamClient struct {
	grpc.ClientStream
}

func (x *userBidiStreamClient) Send(m *BidiStreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *userBidiStreamClient) Recv() (*BidiStreamResponse, error) {
	m := new(BidiStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	Call(context.Context, *CallRequest) (*CallResponse, error)
	ClientStream(User_ClientStreamServer) error
	ServerStream(*ServerStreamRequest, User_ServerStreamServer) error
	BidiStream(User_BidiStreamServer) error
}

// UnimplementedUserServer can be embedded to have forward compatible implementations.
type UnimplementedUserServer struct {
}

func (*UnimplementedUserServer) Call(ctx context.Context, req *CallRequest) (*CallResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Call not implemented")
}
func (*UnimplementedUserServer) ClientStream(srv User_ClientStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method ClientStream not implemented")
}
func (*UnimplementedUserServer) ServerStream(req *ServerStreamRequest, srv User_ServerStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method ServerStream not implemented")
}
func (*UnimplementedUserServer) BidiStream(srv User_BidiStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method BidiStream not implemented")
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_Call_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Call(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/Call",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Call(ctx, req.(*CallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_ClientStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(UserServer).ClientStream(&userClientStreamServer{stream})
}

type User_ClientStreamServer interface {
	SendAndClose(*ClientStreamResponse) error
	Recv() (*ClientStreamRequest, error)
	grpc.ServerStream
}

type userClientStreamServer struct {
	grpc.ServerStream
}

func (x *userClientStreamServer) SendAndClose(m *ClientStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *userClientStreamServer) Recv() (*ClientStreamRequest, error) {
	m := new(ClientStreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _User_ServerStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ServerStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UserServer).ServerStream(m, &userServerStreamServer{stream})
}

type User_ServerStreamServer interface {
	Send(*ServerStreamResponse) error
	grpc.ServerStream
}

type userServerStreamServer struct {
	grpc.ServerStream
}

func (x *userServerStreamServer) Send(m *ServerStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _User_BidiStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(UserServer).BidiStream(&userBidiStreamServer{stream})
}

type User_BidiStreamServer interface {
	Send(*BidiStreamResponse) error
	Recv() (*BidiStreamRequest, error)
	grpc.ServerStream
}

type userBidiStreamServer struct {
	grpc.ServerStream
}

func (x *userBidiStreamServer) Send(m *BidiStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *userBidiStreamServer) Recv() (*BidiStreamRequest, error) {
	m := new(BidiStreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Call",
			Handler:    _User_Call_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ClientStream",
			Handler:       _User_ClientStream_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "ServerStream",
			Handler:       _User_ServerStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "BidiStream",
			Handler:       _User_BidiStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "proto/user.proto",
}
